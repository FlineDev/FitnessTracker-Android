update_fastlane

default_platform(:android)

platform :android do
  desc 'Take phone and tablet screenshots using UI tests'
  lane :screengrab_phone_tablet do
    build_for_screengrab
    device_types_to_avds = {
      phone: 'Pixel_3a_XL_API_29',
      sevenInch: 'Nexus_7_API_29',
      tenInch: 'Pixel_C_API_29'
    }

    device_types_to_avds.keys.each do |device_type|
      avd_name = device_types_to_avds[device_type]
      start_emulator(avd_name)

      force_device_rotation(device_type == :phone ? 0 : 3)
      screengrab(
        device_type: device_type.to_s,
        skip_open_summary: device_types_to_avds.keys.last != device_type
      )
      reset_to_auto_rotation
    end
  end

  def start_emulator(avd_name)
    # system('adb devices | grep emulator | cut -f1 | while read line; do adb -s $line emu kill; done')
    system('adb emu kill')
    sleep 5

    emulator_path = File.join(ENV['ANDROID_HOME'], 'emulator/emulator')
    system("#{emulator_path} @#{avd_name} &")
    puts("Waiting for emulator to start ...")
    system('adb wait-for-device')
  end

  # 0 = portrait, 1 = landscape left, 2 = upside down, 3 = landscape right
  def force_device_rotation(rotation)
    sleep 1
    system('adb shell settings put system accelerometer_rotation 0')
    system("adb shell settings put system user_rotation #{rotation}")
  end

  def reset_to_auto_rotation
    system('adb shell settings put system accelerometer_rotation 1')
    sleep 1
  end

  def build_for_screengrab
    build_android_app(task: 'assemble', build_type: 'Debug')
    build_android_app(task: 'assemble', build_type: 'AndroidTest')
  end
end
